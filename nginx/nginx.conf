# nginx 1.24.x

load_module modules/ngx_http_brotli_filter_module.so;
load_module modules/ngx_http_brotli_static_module.so;

error_log syslog:server=unix:/dev/log,nohostname;
# leave stderr open but minimize duplicate logging to it
error_log stderr emerg;

worker_processes auto;
worker_rlimit_nofile 16384;

events {
    worker_connections 4096;
}

http {
    root /var/empty;

    include mime.types;
    default_type application/octet-stream;

    charset utf-8;
    charset_types text/css text/javascript text/plain text/xml application/atom+xml;

    sendfile on;
    sendfile_max_chunk 256k;
    tcp_nopush on;
    keepalive_requests 256;
    keepalive_timeout 0;
    server_tokens off;
    msie_padding off;

    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
    http2_chunk_size 4k;

    client_body_timeout 15s;
    client_header_timeout 15s;
    send_timeout 30s;

    max_ranges 1;

    resolver [::1];
    resolver_timeout 15s;

    proxy_connect_timeout 5s;
    proxy_read_timeout 15s;
    proxy_send_timeout 15s;

    map $request_method $post_binary_remote_addr {
        POST $binary_remote_addr;
    }

    http2_max_concurrent_streams 16;
    limit_conn_status 429;
    limit_conn_zone $binary_remote_addr zone=http-limit:10m;
    limit_conn http-limit 128;
    limit_req_status 429;
    limit_req_zone $post_binary_remote_addr zone=backend-limit:10m rate=256r/s;
    limit_req_zone $post_binary_remote_addr zone=sample-limit:10m rate=6r/m;
    limit_req_zone $post_binary_remote_addr zone=auth-limit:10m rate=1r/s;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_conf_command Options PrioritizeChaCha;

    ssl_certificate /etc/letsencrypt/live/attestation.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/attestation.app/privkey.pem;

    # maintained by nginx-rotate-session-ticket-keys in ramfs
    ssl_session_ticket_key session-ticket-keys/4.key;
    ssl_session_ticket_key session-ticket-keys/3.key;
    ssl_session_ticket_key session-ticket-keys/2.key;
    ssl_session_ticket_key session-ticket-keys/1.key;
    ssl_session_timeout 1d;
    ssl_buffer_size 4k;

    ssl_trusted_certificate /etc/letsencrypt/live/attestation.app/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    # maintained by certbot-ocsp-fetcher
    ssl_stapling_file /var/cache/certbot-ocsp-fetcher/attestation.app.der;

    log_format main '$connection-$connection_requests $remote_addr $remote_user $ssl_protocol $server_protocol '
        '$host $request_method "$request_uri" $status $request_length $body_bytes_sent/$bytes_sent '
        '$request_time $upstream_connect_time/$upstream_header_time/$upstream_response_time '
        '$upstream_cache_status "$http_referer" "$http_user_agent"';
    access_log syslog:server=unix:/dev/log,nohostname main;
    log_subrequest on;
    log_not_found off;

    gzip_proxied any;
    gzip_vary on;

    if_modified_since before;

    aio threads;
    aio_write on;

    upstream backend {
        zone backend 32k;
        server [::1]:8080 max_conns=1024 max_fails=0;
    }

    map $uri $preload_resources_uri {
        /index.html ", <{{path|/monitoring.js}}>; rel=modulepreload; integrity={{integrity|/monitoring.js}}";
    }

    server {
        listen 80 default_server backlog=4096;
        listen [::]:80 default_server backlog=4096;

        # https://trac.nginx.org/nginx/ticket/2012
        location / {
            return 404;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name attestation.app www.attestation.app;

        location /.well-known/acme-challenge/ {
            root /srv/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 default_server ssl http2 backlog=4096;
        listen [::]:443 default_server ssl http2 backlog=4096;
        ssl_reject_handshake on;

        # https://trac.nginx.org/nginx/ticket/2012
        location / {
            return 404;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name www.attestation.app;

        keepalive_timeout 3m;

        include snippets/security-headers.conf;
        add_header Cross-Origin-Resource-Policy "same-origin" always;

        # https://trac.nginx.org/nginx/ticket/2012
        location / {
            return 301 https://attestation.app$request_uri;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name attestation.app;

        include root_attestation.app.conf;
        error_page 403 =404 /404;
        error_page 404 405 /404;

        keepalive_timeout 3m;

        open_file_cache max=2048 inactive=1d;
        open_file_cache_valid 1d;

        include snippets/security-headers.conf;
        add_header Cross-Origin-Resource-Policy "same-origin" always;
        gzip_static on;
        brotli_static on;

        if ($request_uri ~ ^[^?]+//) {
            rewrite ^(.*)$ $1 permanent;
        }

        location = /security.txt {
            return 301 /.well-known/security.txt;
        }

        location = /bitcoin-address.png {
            return 301 /donate-bitcoin.png;
        }

        location = /bitcoin-donation.png {
            return 301 /donate-bitcoin.png;
        }

        location = /monero-donation.png {
            return 301 /donate-monero.png;
        }

        location = /ic_launcher-web.png {
            return 301 /opengraph.png;
        }

        location = /privacy_policy {
            return 301 /privacy-policy;
        }

        location = /404 {
            internal;
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            include snippets/preload.conf;
            try_files $uri.html =404;
        }

        location = /manifest.webmanifest {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=604800";
        }

        location = /favicon.ico {
            if ($http_accept ~ "image/svg\+xml") {
                rewrite ^ /favicon.svg last;
            }
            include snippets/security-headers.conf;
            # avoid breaking image hotlinking such as https://github.com/TryGhost/Ghost/issues/12880
            add_header Cross-Origin-Resource-Policy "cross-origin" always;
            add_header Cache-Control "public, max-age=604800";
        }

        location = /favicon.svg {
            include snippets/security-headers.conf;
            # avoid breaking image hotlinking such as https://github.com/TryGhost/Ghost/issues/12880
            add_header Cross-Origin-Resource-Policy "cross-origin" always;
            add_header Cache-Control "public, max-age=604800";
        }

        location = /.well-known/traffic-advice {
            default_type application/trafficadvice+json;
        }

        location = /placeholder.gif {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=31536000, immutable";
            gzip_static off;
            brotli_static off;
        }

        location = /submit {
            if ($request_method != POST) {
                return 405;
            }
            client_max_body_size 64k;
            client_body_buffer_size 16k;
            proxy_pass http://backend;
            limit_req zone=backend-limit burst=32 nodelay;
            limit_req zone=sample-limit burst=10 nodelay;
            max_ranges 0;
        }

        location = /challenge {
            if ($request_method != POST) {
                return 405;
            }
            proxy_pass http://backend;
            limit_req zone=backend-limit burst=32 nodelay;
            max_ranges 0;
        }

        location = /verify {
            if ($request_method != POST) {
                return 405;
            }
            client_max_body_size 4k;
            client_body_buffer_size 4k;
            proxy_pass http://backend;
            limit_req zone=backend-limit burst=32 nodelay;
            max_ranges 0;
        }

        location = /api/create-account {
            if ($request_method != POST) {
                return 405;
            }
            proxy_pass http://backend;
            limit_req zone=backend-limit burst=32 nodelay;
            limit_req zone=auth-limit burst=10 nodelay;
            max_ranges 0;
        }

        location = /api/login {
            if ($request_method != POST) {
                return 405;
            }
            proxy_pass http://backend;
            limit_req zone=backend-limit burst=32 nodelay;
            limit_req zone=auth-limit burst=10 nodelay;
            max_ranges 0;
        }

        location ^~ /api/ {
            if ($request_method != POST) {
                return 405;
            }
            gzip on;
            gzip_types application/json;
            brotli on;
            brotli_comp_level 1;
            brotli_types application/json;
            proxy_pass http://backend;
            limit_req zone=backend-limit burst=32 nodelay;
            max_ranges 0;
        }

        location ^~ /fonts/ {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=31536000, immutable";
            gzip_static off;
            brotli_static off;
        }

        location ~ "/$" {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, no-cache";
            include snippets/preload.conf;
            try_files ${uri}index.html @noslash;
        }

        # redirect /path/ to /path if /path.html exists
        location @noslash {
            rewrite ^(.*)/$ $1;
            if (-f $request_filename.html) {
                rewrite ^(.*) $1 permanent;
            }
            return 404;
        }

        location ~ "\.(?:css|js)$" {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=31536000, immutable";
        }

        location ~ "\.svg$" {
            include snippets/security-headers.conf;
            # avoid breaking image hotlinking such as https://github.com/TryGhost/Ghost/issues/12880
            add_header Cross-Origin-Resource-Policy "cross-origin" always;
            add_header Cache-Control "public, max-age=31536000";
        }

        location ~ "\.png$" {
            include snippets/security-headers.conf;
            # avoid breaking image hotlinking such as https://github.com/TryGhost/Ghost/issues/12880
            add_header Cross-Origin-Resource-Policy "cross-origin" always;
            add_header Cache-Control "public, max-age=31536000";
            gzip_static off;
            brotli_static off;
        }

        location ~ "\.(?:json|txt|xml)$" {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=1800";
        }

        location ~ "/index|\.(?:br|gz|html)$" {
            internal;
        }

        location / {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, no-cache";
            include snippets/preload.conf;
            try_files $uri.html $uri/ =404;
        }
    }

    server {
        listen unix:/run/nginx/status.sock;

        access_log off;

        location = / {
            stub_status;
        }

        location / {
            return 404;
        }
    }
}
